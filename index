<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title class="">Minha Carteira</title>
  <script src="https://cdn.tailwindcss.com"></script>

  <style>
    /* --- Efeito Hover dos Cards --- */
    .card {
      transition: transform 0.25s ease, box-shadow 0.25s ease;
    }

    .card:hover {
      transform: translateY(-6px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4);
    }

    /* --- Animação de entrada (descendo + fade) --- */
    @keyframes slideFadeIn {
      0% {
        opacity: 0;
        transform: translateY(-20px);
      }

      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-slide-fade {
      opacity: 0;
      animation: slideFadeIn 0.6s ease-out forwards;
    }

    /* Delays para o efeito em cascata */
    .delay-1 {
      animation-delay: 0.1s;
    }

    .delay-2 {
      animation-delay: 0.2s;
    }

    .delay-3 {
      animation-delay: 0.3s;
    }

    .delay-4 {
      animation-delay: 0.4s;
    }

    .delay-5 {
      animation-delay: 0.5s;
    }
  </style>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="bg-[#000805] text-gray-200 font-sans min-h-screen flex flex-col items-center py-8">

  <div class="w-full max-w-6xl px-4 sm:px-6 lg:px-8">
    <!-- Título -->
    <h1
      class="text-3xl sm:text-4xl md:text-5xl font-semibold mb-8 text-gray-300 animate-slide-fade delay-1 text-center md:text-left ">
      Minha Carteira</h1>

    <!-- Cards superiores -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 mb-10">

      <!-- Saldo -->
      <div class="card rounded-4xl animate-slide-fade delay-2">
        <div
          class="bg-gradient-to-l from-[#23b785]/25 via-transparent to-transparent rounded-[3rem] p-10 sm:p-8 border border-emerald-900/70 shadow-lg border-r-4">
          <div class="flex justify-between items-center mb-3 relative p-4">
            <h2 class="text-xl sm:text-2xl mb-2 font-bold bg-gradient-to-r from-[#C0C0C0] to-[#C0C0C0]/30
               bg-clip-text text-transparent animate-gradient-x text-gray-300 mb-2">Saldo</h2>

            <!-- Dropdown -->
            <div class="relative">
              <button id="dropdownSaldoBtn" class="text-gray-400 text-sm flex items-center gap-1 cursor-pointer">
                <span id="selectedPeriodoSaldo">Este mês</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              <div id="dropdownSaldo"
                class="hidden absolute right-0 mt-2 bg-[#0d1a15] rounded-md shadow-lg border border-[#1f5b46] z-10">
                <button class="block px-4 py-2 w-full text-left hover:bg-[#123124]" data-value="Este mês">Este
                  mês</button>
                <button class="block px-4 py-2 w-full text-left hover:bg-[#123124]" data-value="Último mês">Último
                  mês</button>
                <button class="block px-4 py-2 w-full text-left hover:bg-[#123124]" data-value="Últimos 3 meses">Últimos
                  3 meses</button>
              </div>
            </div>
          </div>

          <p class="text-3xl sm:text-4xl md:text-5xl font-bold text-emerald-400 mb-2" id="saldoValor">R$16.550,00</p>
          <p class="text-emerald-400 text-xs sm:text-sm flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
              stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
            </svg>
            <span id="saldoPorcentagem">14%</span>
            <span class="text-gray-400" id="saldoVariacao">+R$2.576,00 este mês</span>
          </p>
        </div>
      </div>

      <!-- Investimentos -->
      <div class="card rounded-4xl animate-slide-fade delay-2">
        <div
          class="bg-gradient-to-l from-red-600/40 via-transparent to-transparent rounded-[3rem] p-10 sm:p-8 border border-red-600/40 shadow-lg">
          <div class="flex justify-between items-center mb-3 relative p-4">
            <h2 class="text-xl sm:text-2xl mb-2 font-bold bg-gradient-to-r from-[#C0C0C0] to-[#C0C0C0]/30
               bg-clip-text text-transparent animate-gradient-x text-gray-300 mb-2">Investimentos</h2>

            <!-- Dropdown -->
            <div class="relative">
              <button id="dropdownInvestBtn" class="text-gray-400 text-sm flex items-center gap-1 cursor-pointer">
                <span id="selectedPeriodoInvest">Este mês</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              <div id="dropdownInvest"
                class="hidden absolute right-0 mt-2 bg-[#1a0f0f] rounded-md shadow-lg border border-[#5a1717] z-10">
                <button class="block px-4 py-2 w-full text-left hover:bg-[#301010]" data-value="Este mês">Este
                  mês</button>
                <button class="block px-4 py-2 w-full text-left hover:bg-[#301010]" data-value="Último mês">Último
                  mês</button>
                <button class="block px-4 py-2 w-full text-left hover:bg-[#301010]" data-value="Últimos 3 meses">Últimos
                  3 meses</button>
              </div>
            </div>
          </div>

          <p class="text-3xl sm:text-4xl md:text-5xl font-bold text-red-600 mb-2" id="investValor">R$177.650,00</p>
          <p class="text-red-600 text-xs sm:text-sm flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 rotate-180" fill="none" viewBox="0 0 24 24"
              stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
            </svg>
            <span id="investPorcentagem">-7,5%</span>
            <span class="text-gray-400" id="investVariacao">neste mês</span>
          </p>
        </div>
      </div>

    </div>

    <!-- Cards inferiores -->
    <div class="grid grid-cols-1 sm:grid-cols-3 gap-6 animate-slide-fade delay-5 mb-12">
      <!-- Ganhos -->
      <div class="bg-[#ffffff]/7 rounded-[3rem] p-6 sm:p-8 border border-[#1c2a24] shadow-md text-left">
        <h2 class="text-xl sm:text-2xl mb-2 font-bold bg-gradient-to-r from-[#C0C0C0] to-[#C0C0C0]/30
           bg-clip-text text-transparent animate-gradient-x text-gray-300 mb-2">Ganhos</h2>
        <p class="text-gray-400 mb-4 sm:mb-6">Registre aqui todas as suas entradas</p>
        <button id="btnGanhos"
          class="bg-emerald-600 hover:bg-emerald-700 transition text-black px-4 sm:px-6 py-2 sm:py-3 rounded-lg">
          Adicionar Ganhos
        </button>
      </div>

      <!-- Despesas -->
      <div class="bg-[#ffffff]/7 rounded-[3rem] p-6 sm:p-8 border border-[#1c2a24] shadow-md text-left">
        <h2 class="text-xl sm:text-2xl mb-2 font-bold bg-gradient-to-r from-[#C0C0C0] to-[#C0C0C0]/30
           bg-clip-text text-transparent animate-gradient-x text-gray-300 mb-2">Despesas</h2>
        <p class="text-gray-400 mb-4 sm:mb-6">Registre aqui todas as suas despesas</p>
        <button id="btnDespesas"
          class="bg-emerald-600 hover:bg-emerald-700 transition text-black px-4 sm:px-6 py-2 sm:py-3 rounded-lg">
          Adicionar Despesas
        </button>
      </div>

      <!-- Investir -->
      <div class="bg-[#ffffff]/10 rounded-[3rem] p-6 sm:p-8 border border-[#1c2a24] shadow-md text-left">
        <h2 class="text-xl sm:text-2xl mb-2 font-bold bg-gradient-to-r from-[#C0C0C0] to-[#C0C0C0]/30
           bg-clip-text text-transparent animate-gradient-x text-gray-300 mb-2">Investir</h2>
        <p class="text-gray-400 mb-4 sm:mb-6">Registre aqui todos os seus investimentos</p>
        <button id="btnInvestir"
          class="bg-emerald-600 hover:bg-emerald-700 transition text-black px-4 sm:px-6 py-2 sm:py-3 rounded-lg">
          Adicionar Investimentos
        </button>
      </div>
    </div>
  </div>

  <!-- Gráfico de área totalmente horizontal -->
  <div class="animate-slide-fade delay-4 mb-12 flex justify-center">
    <div
      class="bg-[#ffffff]/7 border border-[#1c2a24] rounded-3xl shadow-md p-6 w-full max-w-[1400px] flex flex-row items-center gap-8">
      <h2 class="text-xl sm:text-2xl mb-2 font-bold bg-gradient-to-r from-[#C0C0C0] to-[#C0C0C0]/30
           bg-clip-text text-transparent animate-gradient-x text-gray-300 mb-2">
        Evolução da Carteira
      </h2>
      <div class="w-3/4 h-[300px]">
        <canvas id="graficoCarteira"></canvas>
      </div>
    </div>
  </div>

  <!-- Scripts JS -->
  <script>
  // Valores simulados para cada período
  const dadosSaldo = {
    "Este mês": { valor: "R$16.550,00", porcentagem: "14%", variacao: "+R$2.576,00 este mês" },
    "Último mês": { valor: "R$14.980,00", porcentagem: "10%", variacao: "+R$1.500,00 último mês" },
    "Últimos 3 meses": { valor: "R$45.200,00", porcentagem: "8%", variacao: "+R$3.350,00 últimos 3 meses" }
  };

  const dadosInvestimentos = {
    "Este mês": { valor: "R$177.650,00", porcentagem: "-7,5%", variacao: "neste mês" },
    "Último mês": { valor: "R$180.000,00", porcentagem: "-2%", variacao: "último mês" },
    "Últimos 3 meses": { valor: "R$185.500,00", porcentagem: "+3,2%", variacao: "últimos 3 meses" }
  };

  // Função pra converter "R$177.650,00" em número
  const parseValor = (str) => Number(str.replace(/[R$\.\s]/g, "").replace(",", "."));

  // Dropdowns com atualização de valores
  const dropdowns = [
    {
      button: "dropdownSaldoBtn",
      menu: "dropdownSaldo",
      selected: "selectedPeriodoSaldo",
      dados: dadosSaldo,
      valorId: "saldoValor",
      porcentId: "saldoPorcentagem",
      variacaoId: "saldoVariacao"
    },
    {
      button: "dropdownInvestBtn",
      menu: "dropdownInvest",
      selected: "selectedPeriodoInvest",
      dados: dadosInvestimentos,
      valorId: "investValor",
      porcentId: "investPorcentagem",
      variacaoId: "investVariacao"
    },
  ];

  dropdowns.forEach(d => {
    const btn = document.getElementById(d.button);
    const menu = document.getElementById(d.menu);
    const selected = document.getElementById(d.selected);
    const valor = document.getElementById(d.valorId);
    const porcent = document.getElementById(d.porcentId);
    const variacao = document.getElementById(d.variacaoId);

    btn.addEventListener("click", () => menu.classList.toggle("hidden"));

    menu.querySelectorAll("button").forEach(option => {
      option.addEventListener("click", () => {
        const periodo = option.dataset.value;
        selected.textContent = periodo;
        menu.classList.add("hidden");

        if (d.dados[periodo]) {
          valor.textContent = d.dados[periodo].valor;
          porcent.textContent = d.dados[periodo].porcentagem;
          variacao.textContent = d.dados[periodo].variacao;
        }

        // 🟢 Se for o dropdown de investimentos, muda a cor conforme o valor
        if (d.button === "dropdownInvestBtn") {
          const card = valor.closest(".bg-gradient-to-l");
          const valorAtual = parseValor(d.dados[periodo].valor);
          const valorUltimo = parseValor(d.dados["Último mês"].valor);

          const pContainer = porcent.parentElement;
          const arrowSvg = pContainer.querySelector("svg");

          card.classList.remove(
            "border-red-600/40", "from-red-600/40",
            "border-emerald-900/70", "from-[#23b785]/25"
          );

          if (valorAtual > valorUltimo) {
            // 🔹 Valor subiu → estilo verde
            card.classList.add(
              "border-emerald-900/70",
              "from-[#23b785]/25",
              "bg-gradient-to-l",
              "via-transparent",
              "to-transparent"
            );

            valor.classList.remove("text-red-600");
            valor.classList.add("text-emerald-400");

            porcent.classList.remove("text-red-600");
            porcent.classList.add("text-emerald-400");

            variacao.classList.remove("text-red-600");
            variacao.classList.add("text-emerald-400");

            pContainer.classList.remove("text-red-600");
            pContainer.classList.add("text-emerald-400");

            if (arrowSvg) arrowSvg.classList.remove("rotate-180"); // seta pra cima
          } else {
            // 🔻 Valor caiu → estilo vermelho
            card.classList.add(
              "border-red-600/40",
              "from-red-600/40",
              "bg-gradient-to-l",
              "via-transparent",
              "to-transparent"
            );

            valor.classList.remove("text-emerald-400");
            valor.classList.add("text-red-600");

            porcent.classList.remove("text-emerald-400");
            porcent.classList.add("text-red-600");

            variacao.classList.remove("text-emerald-400");
            variacao.classList.add("text-red-600");

            pContainer.classList.remove("text-emerald-400");
            pContainer.classList.add("text-red-600");

            if (arrowSvg) arrowSvg.classList.add("rotate-180"); // seta pra baixo
          }
        }
      });
    });

    document.addEventListener("click", e => {
      if (!menu.contains(e.target) && !btn.contains(e.target)) {
        menu.classList.add("hidden");
      }
    });
  });

  // Botões principais
  document.getElementById("btnGanhos").addEventListener("click", () => alert("Abrir modal para adicionar ganhos 💰"));
  document.getElementById("btnDespesas").addEventListener("click", () => alert("Abrir modal para adicionar despesas 💸"));
  document.getElementById("btnInvestir").addEventListener("click", () => alert("Abrir modal para adicionar investimentos 📈"));

  // Gráfico
  const ctx = document.getElementById('graficoCarteira').getContext('2d');
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: ['Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out'],
      datasets: [{
        label: 'Saldo (R$)',
        data: [14500, 15200, 15800, 16300, 16550, 16800],
        fill: true,
        borderColor: '#10b981',
        backgroundColor: 'rgba(16, 185, 129, 0.1)',
        tension: 0.4,
        pointRadius: 0,
      }]
    },
    options: {
      responsive: true,
      plugins: { legend: { display: false } },
      scales: {
        x: { ticks: { color: '#aaa' }, grid: { display: false } },
        y: { ticks: { color: '#aaa' }, grid: { color: 'rgba(255,255,255,0.05)' } }
      }
    }
  });
</script>

</body>

</html>
